package com.cts.iiht.memberservice.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.*;

import java.io.Serializable;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.*;

@DynamoDBTable(tableName = "members")
@Data
@AllArgsConstructor
@NoArgsConstructor
public class ProjectMember implements Serializable {
    @DynamoDBHashKey(attributeName = "memberId")
    @DynamoDBAutoGeneratedKey
    private String memberId;
    @DynamoDBAttribute
    private String memberName;
    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = InetgerConverter.class)
    private Integer yearsOfExperience;
    @DynamoDBAttribute
    private List<String> skillset = new ArrayList<>();
    @DynamoDBAttribute
    private String description;
    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = LocalDateConverter.class)
    private LocalDate projectStartDate;
    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = LocalDateConverter.class)
    private LocalDate projectEndDate;
    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = InetgerConverter.class)
    private Integer allocationPercentage;


    public static class InetgerConverter implements DynamoDBTypeConverter<String, Integer> {

        @Override
        public String convert(Integer object) {
            return String.valueOf(object);
        }

        @Override
        public Integer unconvert(String object) {
           return Integer.parseInt(object);
        }
    }

    public static class LocalDateConverter implements DynamoDBTypeConverter<String, LocalDate> {

        @Override
        public String convert(LocalDate object) {
            return object.toString();
        }

        @Override
        public LocalDate unconvert(String object) {
            // Define the desired date format
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

            // Parse the string to LocalDate using the formatter
            LocalDate localDate = LocalDate.parse(object, formatter);
            return localDate;
        }
    }
}
